type User {
    id: ID!
    username: String!
}

type WordList {
    id: ID!
    list: String!
    max_rating: Int!
}

type Task {
    id: ID!
    task: String!
    name: String!
}

type MetaTopic {
    id: ID!
    meta_topic: String!
    description: String!
    image_url: String!
}

type MetaTopicRating {
    metaTopic: MetaTopic!
    rating: Int!
}

type Topic {
    id: ID!
    topic: String!
    meta_topic: MetaTopic! @belongsTo(relation: "metaTopic")
}

type TopicRating {
    topic: Topic!
    rating: Int!
}

type Level {
    id: ID!
    level: String!
}

type TopicLevel {
    id: ID!
    topic: Topic! @belongsTo(relation: "topic")
    level: Level! @belongsTo(relation: "level")
    wordList: WordList! @belongsTo(relation: "wordList")
}

type TopicLevelTask {
    id: ID!
    topicLevel: TopicLevel! @belongsTo(relation: "topicLevel")
    task: Task! @belongsTo(relation: "task")
    task_data: String!
}

type WordListTask {
    id: ID!
    wordList: WordList! @belongsTo(relation: "wordList")
    task: Task! @belongsTo(relation: "task")
    task_data: String!
    count: Int!
    max_rating: Int!
}

type WordListUser {
    id: ID!
    wordList: WordList! @belongsTo(relation: "wordList")
    user: User! @belongsTo(relation: "user")
    rating: Int!
}

type Dialog {
    id: ID!
    wordList: WordList! @belongsTo(relation: "wordList")
    dialog_data: String!
}

type Query {
    user(id: ID! @eq): User @find
    users: [User!]! @paginate
    me: User @auth(guard: "api")

    word_list(id: ID! @eq): WordList @find
    word_lists: [WordList!]! @all

    tasks: [Task!]! @all
    task(id: ID! @eq): Task @find
    task_by_name(name: String! @where(operator: "like")): [Task!]! @all

    meta_topics: [MetaTopic!]! @all
    meta_topic(id: ID! @eq): MetaTopic @find

    metaTopicsRating: [MetaTopicRating!]!
        @field(resolver: "MetaTopicsRating@resolve")
        @guard(with: ["api"])

    topicsRating: [TopicRating!]!
        @field(resolver: "TopicsRating@resolve")
        @guard(with: ["api"])

    topics: [Topic!]! @all
    topic(id: ID! @eq): Topic @find
    topic_by_topic_name(topic: String! @where(operator: "like")): [Topic!]! @all
    topic_by_meta_topic(
        meta_topic_id: Int @where(operator: "like")
    ): [Topic!]! @all

    topics_with_rating_by_meta_topic(
        meta_topic_id: Int @where(operator: "like")
    ): [TopicRating!]!
    @field(resolver: "TopicsRating@resolve")
    @guard(with: ["api"])

    levels: [Level!]! @all
    level(id: ID! @eq): Level @find
    level_by_level_name(level: String! @where(operator: "like")): [Level!]! @all

    topic_level(
        topic_id: Int @where(operator: "like")
        level_id: Int @where(operator: "like")
    ): [TopicLevel!]! @all

    topic_level_task(
        topic_level_id: Int @where(operator: "like")
        task_id: Int @where(operator: "like")
    ): [TopicLevelTask!]! @all

    word_list_task(
        word_list_id: Int @where(operator: "like")
        task_id: Int @where(operator: "like")
    ): [WordListTask!]! @all

    word_list_user(
        word_list_id: Int @where(operator: "like")
        user_id: Int @where(operator: "like")
    ): [WordListUser!]! @all

    dialog_by_word_list_id(
        word_list_id: Int @where(operator: "like")
    ): [Dialog!]! @all
}

type Mutation {
    createUser(
        name: String!
        username: String!
        email: String! @rules(apply: ["email", "unique:users"])
        password: String! @hash @rules(apply: ["min:6"])
    ): User @create

    login(
        email: String!
        password: String!
    ): String @field(resolver: "AuthMutator@resolve")

    adjustUserWordListResult(
        word_list_id: Int!
        rating: Int!
    ): WordListUser @field(resolver: "AdjustUserWordListResult@resolve")
    @guard(with: ["api"])
}
